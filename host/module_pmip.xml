<?xml version="1.0" encoding="UTF-8"?>
<project name="module_pmip" default="compile.module.pmip">
  <dirname property="module.pmip.basedir" file="${ant.file.module_pmip}"/>
  
  <property name="module.jdk.home.pmip" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.pmip" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.pmip" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.pmip" value="${compiler.args}"/>
  
  <property name="pmip.output.dir" value="${module.pmip.basedir}/classes/production/PMIP"/>
  <property name="pmip.testoutput.dir" value="${module.pmip.basedir}/classes/test/PMIP"/>
  
  <path id="pmip.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="pmip.module.classpath">
    <path refid="${module.jdk.classpath.pmip}"/>
    <path refid="library.shipped.classpath"/>
  </path>
  
  <path id="pmip.runtime.module.classpath">
    <pathelement location="${pmip.output.dir}"/>
    <pathelement location="${pmip.testoutput.dir}"/>
    <path refid="library.shipped.classpath"/>
  </path>

  <patternset id="excluded.from.module.pmip">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.pmip">
    <patternset refid="excluded.from.module.pmip"/>
  </patternset>
  
  <path id="pmip.module.sourcepath">
    <dirset dir="${module.pmip.basedir}">
      <include name="icons"/>
      <include name="src"/>
    </dirset>
  </path>
  
  <target name="compile.module.pmip" depends="compile.module.pmip.production,compile.module.pmip.tests" description="Compile module PMIP"/>
  
  <target name="compile.module.pmip.production" description="Compile module PMIP; production classes">
    <mkdir dir="${pmip.output.dir}"/>
    <javac2 destdir="${pmip.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.pmip}/javac">
      <compilerarg line="${compiler.args.pmip}"/>
      <bootclasspath refid="pmip.module.bootclasspath"/>
      <classpath refid="pmip.module.classpath"/>
      <src refid="pmip.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.pmip"/>
    </javac2>
    
    <copy todir="${pmip.output.dir}">
      <fileset dir="${module.pmip.basedir}/icons">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.pmip.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset file="${module.pmip.basedir}/license.txt"/>
    </copy>
  </target>
  
  <target name="compile.module.pmip.tests" depends="compile.module.pmip.production" description="compile module PMIP; test classes" unless="skip.tests"/>
  
  <target name="clean.module.pmip" description="cleanup module">
    <!--<delete dir="${pmip.output.dir}"/>-->
    <delete dir="${pmip.testoutput.dir}"/>
  </target>
  
  <property name="pmip.plugin.exploded.dir" value="${module.pmip.basedir}/../../../../../../settings/.IntelliJIdea8x/system/plugins-sandbox/plugins/PMIP"/>
  <property name="pmip.path.jar" value="${module.pmip.basedir}/PMIP.zip"/>
  <target name="plugin.build.pmip" depends="compile.module.pmip" description="Build configured plugin directories and archives for module &apos;PMIP&apos;">
    <antcall target="plugin.build.exploded.pmip">
      <param name="plugin.dir.exploded" value="${pmip.plugin.exploded.dir}"/>
    </antcall>
    <antcall target="plugin.build.jar.pmip">
      <param name="plugin.path.jar" value="${pmip.path.jar}"/>
    </antcall>
  </target>
  
  <!-- Call the target to build exploded directory for module 'PMIP'.\n       Path to the exploded directory is specified by parameter 'plugin.dir.exploded' -->
  <target name="plugin.build.exploded.pmip" description="Plugin exploded directory for module &apos;PMIP&apos;">
    <copy file="${module.pmip.basedir}/lib/jedi_2.7.1.jar" tofile="${plugin.dir.exploded}/lib/jedi_2.7.1.jar"/>
    <copy file="${module.pmip.basedir}/lib/sugar.jar" tofile="${plugin.dir.exploded}/lib/sugar.jar"/>
    <copy file="${module.pmip.basedir}/lib/bsh-2.0b4.jar" tofile="${plugin.dir.exploded}/lib/bsh-2.0b4.jar"/>
    <copy file="${module.pmip.basedir}/lib/jruby-complete-1.4.0.jar" tofile="${plugin.dir.exploded}/lib/jruby-complete-1.4.0.jar"/>
    <copy todir="${plugin.dir.exploded}/classes">
      <fileset dir="${module.pmip.basedir}/classes/production/PMIP"/>
    </copy>
    <copy file="${module.pmip.basedir}/META-INF/plugin.xml" tofile="${plugin.dir.exploded}/META-INF/plugin.xml"/>
  </target>
  
  <!-- Call the target to build archive for module 'PMIP'.\n       Path to the archive file is specified by parameter 'plugin.path.jar' -->
  <target name="plugin.build.jar.pmip" description="Build plugin archive for module &apos;PMIP&apos;">
    <property name="tmp.dir.pmip" value="${module.pmip.basedir}/../temp"/>
    <mkdir dir="${tmp.dir.pmip}"/>
    <mkdir dir="${tmp.dir.pmip}/lib"/>
    <jar destfile="${tmp.dir.pmip}/lib/PMIP.jar" duplicate="preserve">
      <zipfileset dir="${module.pmip.basedir}/classes/production/PMIP" prefix=""/>
      <zipfileset file="${module.pmip.basedir}/META-INF/plugin.xml" prefix="META-INF"/>
      <manifest>
        <attribute name="Created-By" value="IntelliJ IDEA"/>
        <attribute name="Manifest-Version" value="1.0"/>
      </manifest>
    </jar>
    <copy file="${module.pmip.basedir}/lib/jruby-complete-1.4.0.jar" tofile="${tmp.dir.pmip}/lib/jruby-complete-1.4.0.jar"/>
    <copy file="${module.pmip.basedir}/lib/bsh-2.0b4.jar" tofile="${tmp.dir.pmip}/lib/bsh-2.0b4.jar"/>
    <copy file="${module.pmip.basedir}/lib/sugar.jar" tofile="${tmp.dir.pmip}/lib/sugar.jar"/>
    <copy file="${module.pmip.basedir}/lib/jedi_2.7.1.jar" tofile="${tmp.dir.pmip}/lib/jedi_2.7.1.jar"/>
    <zip destfile="${pmip.path.jar}">
      <fileset dir="${module.pmip.basedir}/../temp"/>
    </zip>
    <delete dir="${tmp.dir.pmip}"/>
  </target>
</project>